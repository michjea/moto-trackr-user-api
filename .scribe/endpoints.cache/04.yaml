## Autogenerated by Scribe. DO NOT MODIFY.

name: Users
description: |-

  APIs pour gérer les utilisateurs
endpoints:
  -
    httpMethods:
      - GET
    uri: api/users/me
    metadata:
      groupName: Users
      groupDescription: |-

        APIs pour gérer les utilisateurs
      subgroup: ''
      subgroupDescription: ''
      title: "Show the current user's profile."
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer E5a8ZcDbvVhf616egdPa4k3'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/user/following
    metadata:
      groupName: Users
      groupDescription: |-

        APIs pour gérer les utilisateurs
      subgroup: ''
      subgroupDescription: ''
      title: "Get the user's following list."
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer aEdh4D6cfkPveaV3b68Z5g1'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/user/followers
    metadata:
      groupName: Users
      groupDescription: |-

        APIs pour gérer les utilisateurs
      subgroup: ''
      subgroupDescription: ''
      title: "Get the user's followers list."
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer P51b6kcdaDE3V4Zv86efhag'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/user
    metadata:
      groupName: Users
      groupDescription: |-

        APIs pour gérer les utilisateurs
      subgroup: ''
      subgroupDescription: ''
      title: 'Store a newly created resource in storage.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'The name of the user.'
        required: true
        example: sequi
        type: string
        custom: []
      email:
        name: email
        description: 'The email of the user.'
        required: true
        example: hoeger.norval@example.org
        type: string
        custom: []
      password:
        name: password
        description: 'The password of the user.'
        required: true
        example: '{T[SE&;npxOPP'
        type: string
        custom: []
      password_confirmation:
        name: password_confirmation
        description: 'The password confirmation of the user.'
        required: true
        example: repellat
        type: string
        custom: []
    cleanBodyParameters:
      name: sequi
      email: hoeger.norval@example.org
      password: '{T[SE&;npxOPP'
      password_confirmation: repellat
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer he5gP1fav6ZcaEkD8d43b6V'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/user/{id}'
    metadata:
      groupName: Users
      groupDescription: |-

        APIs pour gérer les utilisateurs
      subgroup: ''
      subgroupDescription: ''
      title: 'Display the specified resource.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the user.'
        required: true
        example: et
        type: string
        custom: []
    cleanUrlParameters:
      id: et
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer eZ1k5fdcD6gh43a6VbEvPa8'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/user/{id}'
    metadata:
      groupName: Users
      groupDescription: |-

        APIs pour gérer les utilisateurs
      subgroup: ''
      subgroupDescription: ''
      title: 'Update the specified resource in storage.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the user.'
        required: true
        example: delectus
        type: string
        custom: []
    cleanUrlParameters:
      id: delectus
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'The name of the user.'
        required: false
        example: quibusdam
        type: string
        custom: []
      email:
        name: email
        description: 'The email of the user.'
        required: false
        example: era.pagac@example.org
        type: string
        custom: []
      password:
        name: password
        description: 'The password of the user.'
        required: false
        example: "Bd'*(Z^"
        type: string
        custom: []
      password_confirmation:
        name: password_confirmation
        description: 'The password confirmation of the user.'
        required: false
        example: et
        type: string
        custom: []
    cleanBodyParameters:
      name: quibusdam
      email: era.pagac@example.org
      password: "Bd'*(Z^"
      password_confirmation: et
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer vbdkeVEagD4hafZ35P66c81'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/user/{id}'
    metadata:
      groupName: Users
      groupDescription: |-

        APIs pour gérer les utilisateurs
      subgroup: ''
      subgroupDescription: ''
      title: 'Remove the specified resource from storage.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the user.'
        required: true
        example: possimus
        type: string
        custom: []
    cleanUrlParameters:
      id: possimus
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer VD5Z8fvhcb41g6e6E3akdPa'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/users/search
    metadata:
      groupName: Users
      groupDescription: |-

        APIs pour gérer les utilisateurs
      subgroup: ''
      subgroupDescription: ''
      title: 'Search users.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      query:
        name: query
        description: 'The query to search for.'
        required: true
        example: quibusdam
        type: string
        custom: []
    cleanQueryParameters:
      query: quibusdam
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer aZE3e4kv66Dd8Phbga1V5fc'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/user/{id}/unfollow'
    metadata:
      groupName: Users
      groupDescription: |-

        APIs pour gérer les utilisateurs
      subgroup: ''
      subgroupDescription: ''
      title: 'Unfollow a user.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the user to unfollow.'
        required: true
        example: illo
        type: string
        custom: []
    cleanUrlParameters:
      id: illo
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 13EDafd8a6h4Z6e5vbVPgkc'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/user/{id}/follow'
    metadata:
      groupName: Users
      groupDescription: |-

        APIs pour gérer les utilisateurs
      subgroup: ''
      subgroupDescription: ''
      title: 'Follow a user.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the user to follow.'
        required: true
        example: et
        type: string
        custom: []
    cleanUrlParameters:
      id: et
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer bDP4V1e6dvkg6Z3ac8fa5hE'
    controller: null
    method: null
    route: null
    custom: []
