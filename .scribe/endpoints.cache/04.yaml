## Autogenerated by Scribe. DO NOT MODIFY.

name: Users
description: |-

  APIs pour gérer les utilisateurs
endpoints:
  -
    httpMethods:
      - GET
    uri: api/users/me
    metadata:
      groupName: Users
      groupDescription: |-

        APIs pour gérer les utilisateurs
      subgroup: ''
      subgroupDescription: ''
      title: "Show the current user's profile."
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 5ZhD1aPVekgb38d64ac6vfE'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/user/following
    metadata:
      groupName: Users
      groupDescription: |-

        APIs pour gérer les utilisateurs
      subgroup: ''
      subgroupDescription: ''
      title: "Get the user's following list."
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer b66Z8c35vVfgaa41kdEPeDh'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/user/followers
    metadata:
      groupName: Users
      groupDescription: |-

        APIs pour gérer les utilisateurs
      subgroup: ''
      subgroupDescription: ''
      title: "Get the user's followers list."
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer gd6va436feV5chEk8DZ1bPa'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/user
    metadata:
      groupName: Users
      groupDescription: |-

        APIs pour gérer les utilisateurs
      subgroup: ''
      subgroupDescription: ''
      title: 'Store a newly created resource in storage.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'The name of the user.'
        required: true
        example: nulla
        type: string
        custom: []
      email:
        name: email
        description: 'The email of the user.'
        required: true
        example: buddy72@example.net
        type: string
        custom: []
      password:
        name: password
        description: 'The password of the user.'
        required: true
        example: ',}uDe=`QVlr'
        type: string
        custom: []
      password_confirmation:
        name: password_confirmation
        description: 'The password confirmation of the user.'
        required: true
        example: dolorem
        type: string
        custom: []
    cleanBodyParameters:
      name: nulla
      email: buddy72@example.net
      password: ',}uDe=`QVlr'
      password_confirmation: dolorem
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6c5EvP3kga6dZ8eVa4D1hfb'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/user/{id}'
    metadata:
      groupName: Users
      groupDescription: |-

        APIs pour gérer les utilisateurs
      subgroup: ''
      subgroupDescription: ''
      title: 'Display the specified resource.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the user.'
        required: true
        example: aut
        type: string
        custom: []
    cleanUrlParameters:
      id: aut
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer Z1Phf8b435VeakvEaD6cdg6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/user/{id}'
    metadata:
      groupName: Users
      groupDescription: |-

        APIs pour gérer les utilisateurs
      subgroup: ''
      subgroupDescription: ''
      title: 'Update the specified resource in storage.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the user.'
        required: true
        example: omnis
        type: string
        custom: []
    cleanUrlParameters:
      id: omnis
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'The name of the user.'
        required: false
        example: et
        type: string
        custom: []
      email:
        name: email
        description: 'The email of the user.'
        required: false
        example: sipes.paige@example.org
        type: string
        custom: []
      password:
        name: password
        description: 'The password of the user.'
        required: false
        example: "*O/._@p?'e'*m7\\+x|"
        type: string
        custom: []
      password_confirmation:
        name: password_confirmation
        description: 'The password confirmation of the user.'
        required: false
        example: quia
        type: string
        custom: []
    cleanBodyParameters:
      name: et
      email: sipes.paige@example.org
      password: "*O/._@p?'e'*m7\\+x|"
      password_confirmation: quia
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer V156ecbk86f4dDPhaEag3Zv'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/user/{id}'
    metadata:
      groupName: Users
      groupDescription: |-

        APIs pour gérer les utilisateurs
      subgroup: ''
      subgroupDescription: ''
      title: 'Remove the specified resource from storage.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the user.'
        required: true
        example: hic
        type: string
        custom: []
    cleanUrlParameters:
      id: hic
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer a1bhE5vZVPgae8k66Df4cd3'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/users/search
    metadata:
      groupName: Users
      groupDescription: |-

        APIs pour gérer les utilisateurs
      subgroup: ''
      subgroupDescription: ''
      title: 'Search users.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      query:
        name: query
        description: 'The query to search for.'
        required: true
        example: enim
        type: string
        custom: []
    cleanQueryParameters:
      query: enim
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer vh4afV5kgPD66Z8ac1bdE3e'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/user/{id}/unfollow'
    metadata:
      groupName: Users
      groupDescription: |-

        APIs pour gérer les utilisateurs
      subgroup: ''
      subgroupDescription: ''
      title: 'Unfollow a user.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the user to unfollow.'
        required: true
        example: deleniti
        type: string
        custom: []
    cleanUrlParameters:
      id: deleniti
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer dvV86a46ZcEhPf1g35akDeb'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/user/{id}/follow'
    metadata:
      groupName: Users
      groupDescription: |-

        APIs pour gérer les utilisateurs
      subgroup: ''
      subgroupDescription: ''
      title: 'Follow a user.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the user to follow.'
        required: true
        example: excepturi
        type: string
        custom: []
    cleanUrlParameters:
      id: excepturi
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer g5af8vcPhkb6Z3a64E1deDV'
    controller: null
    method: null
    route: null
    custom: []
